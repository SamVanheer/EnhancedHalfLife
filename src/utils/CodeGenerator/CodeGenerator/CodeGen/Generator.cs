using System;
using System.IO;

namespace CodeGenerator.CodeGen
{
    /// <summary>
    /// Given as set of code to generate, generates header and source files as needed
    /// </summary>
    public class Generator
    {
        private static readonly string GeneratedDirectory = "generated" + Path.DirectorySeparatorChar;
        private const string GeneratedSourceName = "ehl_generated.cpp";

        private readonly string _generatedDirectory;
        private readonly GeneratedCode _generatedCode;

        public Generator(string binaryDirectory, GeneratedCode generatedCode)
        {
            _generatedDirectory = Path.Join(binaryDirectory, GeneratedDirectory);
            _generatedCode = generatedCode;
        }

        public void Generate()
        {
            Directory.CreateDirectory(_generatedDirectory);

            var heading = @$"//Automatically generated by Enhanced Half-Life Code Generator
//{DateTimeOffset.Now}
//DO NOT EDIT

";

            GenerateHeaders(heading);
            GenerateSources(heading);
        }

        private void GenerateHeaders(string heading)
        {
            foreach (var data in _generatedCode.Classes)
            {
                File.WriteAllText($"{_generatedDirectory}{data.BaseFileName}.hpp", heading + data.GenerateFullDeclaration());
            }
        }

        private void GenerateSources(string heading)
        {
            foreach (var data in _generatedCode.Classes)
            {
                File.WriteAllText($"{_generatedDirectory}{data.BaseFileName}.cpp", heading + data.GenerateFullDefinition());
            }

            //Generate the automatically included source file
            using var writer = File.CreateText(GeneratedSourceName);

            writer.Write(heading);

            foreach (var data in _generatedCode.Classes)
            {
                writer.WriteLine($"#include \"{_generatedDirectory}{data.BaseFileName}.cpp\"");
            }
        }
    }
}
